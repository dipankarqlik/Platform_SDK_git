import Auth from './auth/auth';
import { Config } from './types/types';
export { AuthType, Config } from './types/types';
export { ConnectionErrorMsg, AuthenticationErrorMsg, CustomErrorMsg, } from './errors';
export { Auth };
/**
 * @remarks
 * Qlik.ts is the SDKs entrypoint
 *
 * @param config - required configuration object
 *
 * @returns an instance of the Auth module.
 * @example
 * ```ts
 * import Qlik from '@qlik/sdk';
 * const config: Config =  {
 *   authType: AuthType.WebIntegration,
 *   host: 'my-tenant.qlikcloud.com',
 *   webIntegrationId: '<webintegrationId>',
 * };
 *
 * const qlik = new Qlik(config);
 *
 * if(!qlik.auth.isAuthenticated()){
 *   qlik.auth.authenticate();
 * }
 * ```
 */
export default class Qlik {
    /** config object reference for the module instance */
    config: Config;
    /** initiated instance of the Authentication module */
    auth: Auth;
    /** rest client  reference for the module instance - @experimental */
    rest: WindowOrWorkerGlobalScope['fetch'];
    constructor(config: Config);
}
