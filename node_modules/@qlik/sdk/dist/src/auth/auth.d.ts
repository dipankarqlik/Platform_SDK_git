import { Config } from '../types/types';
/**
 * @remarks
 * Auth.ts is a typescript module included in qlik-sdk for implementing authentication
 * and authorization in browsers and node.js web apps
 * (Note: 'autoRedirect' field will be set to false if missing)
 *
 * @param config - required configuration
 *
 * @returns an instance of the Auth module.
 * @example
 * ```ts
 * import Auth from '@qlik/sdk/auth';
 * const config: Config =  {
 *   authType: AuthType.WebIntegration,
 *   host: 'my-tenant.qlikcloud.com',
 *   webIntegrationId: '<webintegrationId>',
 * };
 *
 * const auth = new Auth(config);
 *
 * if(!auth.isAuthenticated()){
 *   auth.authenticate();
 * }
 * ```
 */
export default class Auth {
    /** config object reference for the module instance */
    config: Config;
    /** rest client object reference for the module instance - @experimental */
    rest: (url: RequestInfo, init?: RequestInit) => Promise<Response>;
    constructor(config: Config);
    /**
     * Get access
     * For WebIntegration:
     * Navigates to the login page and redirects back to the current page after login
     */
    authenticate(): void;
    /**
     * checks authentication status using the "/users/me" endpoint
     */
    isAuthenticated(): Promise<boolean>;
    /**
     * invalidate the current session
     */
    deAuthenticate(): void;
    /**
     * generateWebsocketUrl - For WebIntegration:
     * Assumes authenticated state in order to fetch the csrf-token.
     * @param appId - The appId to generate a websocket url for
     */
    generateWebsocketUrl(appId: string): Promise<string>;
}
