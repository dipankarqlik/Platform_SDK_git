"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
// import fetch, { Request, Response, Headers } from 'cross-fetch';
const cross_fetch_1 = __importDefault(require("cross-fetch"));
const qlik_1 = require("../qlik");
const { Response } = jest.requireActual('cross-fetch');
jest.mock('cross-fetch', () => jest.fn());
describe('Client', () => {
    beforeEach(() => {
        jest.clearAllMocks();
    });
    it('should be able to make a get request', async () => {
        jest.mocked(cross_fetch_1.default).mockResolvedValue(new Response(null, { status: 200 }));
        const config = {
            host: 'http://mock-host.com',
            authType: qlik_1.AuthType.APIKey,
            apiKey: 'mock-apikey',
        };
        const { rest } = new qlik_1.Auth(config);
        const res = await rest('/users/me');
        expect(res.status).toBe(200);
    });
});
//# sourceMappingURL=restClient.test.js.map